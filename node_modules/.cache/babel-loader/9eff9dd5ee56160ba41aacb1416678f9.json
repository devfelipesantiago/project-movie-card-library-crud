{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: '',\n      movieEdit: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchEditMovie = this.fetchEditMovie.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    const {\n      id\n    } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  fetchEditMovie(id) {\n    this.setState({\n      loading: true\n    }, () => {\n      movieAPI.getMovie(id).then(resolve => this.setState({\n        loading: false\n      }));\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {// Redirect\n    }\n\n    if (status === 'loading') {// render Loading\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","MovieForm","movieAPI","EditMovie","constructor","props","state","loading","movieEdit","handleSubmit","bind","fetchEditMovie","componentDidMount","id","match","params","updatedMovie","setState","getMovie","then","resolve","render","status","shouldRedirect","movie"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAhC;AACA,SAAKJ,cAAL,CAAoBE,EAApB;AACD;;AAEDJ,EAAAA,YAAY,CAACO,YAAD,EAAe;AACzB,UAAM;AAAEH,MAAAA;AAAF,QAAS,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAhC;AACA,SAAKJ,cAAL,CAAoBE,EAApB;AACD;;AAEDF,EAAAA,cAAc,CAACE,EAAD,EAAK;AACjB,SAAKI,QAAL,CAAe;AAAEV,MAAAA,OAAO,EAAE;AAAX,KAAf,EACE,MAAM;AACJL,MAAAA,QAAQ,CAACgB,QAAT,CAAkBL,EAAlB,EACGM,IADH,CACSC,OAAD,IACJ,KAAKH,QAAL,CAAc;AACZV,QAAAA,OAAO,EAAE;AADG,OAAd,CAFJ;AAMD,KARH;AAUD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKlB,KAA/C;;AACA,QAAIiB,cAAJ,EAAoB,CAClB;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B,CACxB;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGE,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKf,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAjD+B;;AAoDlC,eAAeN,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: '',\n      movieEdit: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchEditMovie = this.fetchEditMovie.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    const { id } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  fetchEditMovie(id) {\n    this.setState(({ loading: true }),\n      () => {\n        movieAPI.getMovie(id)\n          .then((resolve) => (\n            this.setState({\n              loading: false,\n            })\n          ));\n      }\n    );\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      // Redirect\n    }\n\n    if (status === 'loading') {\n      // render Loading\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}