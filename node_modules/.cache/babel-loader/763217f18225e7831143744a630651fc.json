{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\nimport PropTypes from 'prop-types';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: '',\n      movieObj: []\n    };\n    this.fetchMovieDetails = this.fetchMovieDetails.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.fetchMovieDetails(id);\n  }\n\n  handleClick() {\n    const {\n      id\n    } = this.props.match.params;\n    movieAPI.deleteMovie(id);\n  }\n\n  fetchMovieDetails(id) {\n    this.setState({\n      loading: true\n    }, () => {\n      movieAPI.getMovie(id).then(resolve => this.setState({\n        loading: false,\n        movieObj: resolve\n      }));\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      movieObj\n    } = this.state;\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle,\n      id\n    } = movieObj;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 27\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"DELETAR\"));\n  }\n\n}\n\nexport default MovieDetails; // MovieDetails.prototype = {\n//   match: PropsTypes.object.isRequired,\n// };","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","Link","movieAPI","Loading","PropTypes","MovieDetails","constructor","props","state","loading","movieObj","fetchMovieDetails","bind","handleClick","componentDidMount","id","match","params","deleteMovie","setState","getMovie","then","resolve","render","title","storyline","imagePath","genre","rating","subtitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\nimport PropTypes from 'prop-types';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: '',\n      movieObj: [],\n    };\n    this.fetchMovieDetails = this.fetchMovieDetails.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.fetchMovieDetails(id);\n  }\n\n  handleClick() {\n    const { id } = this.props.match.params;\n    movieAPI.deleteMovie(id);\n  }\n\n  fetchMovieDetails(id) {\n    this.setState({ loading: true },\n      () => {\n        movieAPI.getMovie(id)\n          .then((resolve) => (\n            this.setState({\n              loading: false,\n              movieObj: resolve,\n            })\n          ));\n      });\n  }\n\n  render() {\n    const { loading, movieObj } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle, id } = movieObj;\n    if (loading) { return <Loading />; }\n\n    return (\n      <div data-testid=\"movie-details\">\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <p>{ `Title: ${title}` }</p>\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n        <Link to={ `/movies/${id}/edit` }>EDITAR</Link>\n        <Link to=\"/\">VOLTAR</Link>\n        <Link to=\"/\" onClick={ this.handleClick }>DELETAR</Link>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n\n// MovieDetails.prototype = {\n//   match: PropsTypes.object.isRequired,\n// };\n"]},"metadata":{},"sourceType":"module"}