{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: '',\n      movieObj: []\n    };\n    this.fetchMovieDetails = this.fetchMovieDetails.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.fetchMovieDetails(id);\n  }\n\n  fetchMovieDetails(id) {\n    this.setState({\n      loading: true\n    }, () => {\n      movieAPI.getMovie(id).then(resolve => this.setState({\n        loading: false,\n        movieObj: resolve\n      }));\n    });\n  }\n\n  render() {\n    const {\n      movieObj,\n      loading\n    } = this.state;\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = movieObj;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, `Rating: ${rating}`), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, \"Editar\")));\n  }\n\n}\n\nexport default MovieDetails;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","movieAPI","Loading","MovieDetails","constructor","props","state","loading","movieObj","fetchMovieDetails","bind","componentDidMount","id","match","params","setState","getMovie","then","resolve","render","title","storyline","imagePath","genre","rating","subtitle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAIA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKP,KAAL,CAAWQ,KAAX,CAAiBC,MAAhC;AACA,SAAKL,iBAAL,CAAuBG,EAAvB;AACD;;AAEDH,EAAAA,iBAAiB,CAACG,EAAD,EAAK;AACpB,SAAKG,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE;AAAX,KAAd,EACE,MAAM;AACJN,MAAAA,QAAQ,CAACe,QAAT,CAAkBJ,EAAlB,EACGK,IADH,CACSC,OAAD,IACJ,KAAKH,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,QAAQ,EAAEU;AAFE,OAAd,CAFJ;AAOD,KATH;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,QAAF;AAAYD,MAAAA;AAAZ,QAAwB,KAAKD,KAAnC;AACA,UAAM;AAAEc,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA,SAApB;AAA+BC,MAAAA,KAA/B;AAAsCC,MAAAA,MAAtC;AAA8CC,MAAAA;AAA9C,QAA2DjB,QAAjE;;AAEA,QAAID,OAAJ,EAAa;AAAE,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAqB;;AAEpC,wBACE;AAAK,qBAAY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKa,KAAL,CADF,eAEE;AAAK,MAAA,GAAG,EAAC,aAAT;AAAuB,MAAA,GAAG,EAAI,MAAKE,SAAU,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,aAAYG,QAAS,EAA3B,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,cAAaJ,SAAU,EAA7B,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,UAASE,KAAM,EAArB,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,WAAUC,MAAO,EAAvB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAPF,CADF;AAaD;;AA/CkC;;AAkDrC,eAAerB,YAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: '',\n      movieObj: [],\n    };\n    this.fetchMovieDetails = this.fetchMovieDetails.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.fetchMovieDetails(id);\n  }\n\n  fetchMovieDetails(id) {\n    this.setState({ loading: true },\n      () => {\n        movieAPI.getMovie(id)\n          .then((resolve) => (\n            this.setState({\n              loading: false,\n              movieObj: resolve,\n            })\n          ));\n      });\n  }\n\n  render() {\n    const { movieObj, loading } = this.state;\n    const { title, storyline, imagePath, genre, rating, subtitle } = movieObj;\n\n    if (loading) { return <Loading />; }\n\n    return (\n      <div data-testid=\"movie-details\">\n        <p>{ title }</p>\n        <img alt=\"Movie Cover\" src={ `../${imagePath}` } />\n        <p>{ `Subtitle: ${subtitle}` }</p>\n        <p>{ `Storyline: ${storyline}` }</p>\n        <p>{ `Genre: ${genre}` }</p>\n        <p>{ `Rating: ${rating}` }</p>\n        <div>\n          <button>Editar</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}