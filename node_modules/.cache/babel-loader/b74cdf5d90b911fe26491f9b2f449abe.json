{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Loading from '../components/Loading';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchEditMovie = this.fetchEditMovie.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    const {\n      id\n    } = this.props.match.params;\n    this.setState({\n      movie: updatedMovie,\n      shouldRedirect: true\n    });\n    this.fetchEditMovie(id);\n    console.log(updatedMovie);\n    console.log(this.state.movie);\n  }\n\n  fetchEditMovie(id) {\n    movieAPI.getMovie(id).then(movie => this.setState({\n      status: '',\n      movie\n    }));\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","Loading","MovieForm","movieAPI","EditMovie","constructor","props","state","status","shouldRedirect","movie","handleSubmit","bind","fetchEditMovie","componentDidMount","id","match","params","updatedMovie","setState","console","log","getMovie","then","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAChCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,SADG;AAEXC,MAAAA,cAAc,EAAE,KAFL;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAhC;AACA,SAAKJ,cAAL,CAAoBE,EAApB;AACD;;AAEDJ,EAAAA,YAAY,CAACO,YAAD,EAAe;AACzB,UAAM;AAAEH,MAAAA;AAAF,QAAS,KAAKT,KAAL,CAAWU,KAAX,CAAiBC,MAAhC;AACA,SAAKE,QAAL,CAAc;AACZT,MAAAA,KAAK,EAAEQ,YADK;AAEZT,MAAAA,cAAc,EAAE;AAFJ,KAAd;AAIA,SAAKI,cAAL,CAAoBE,EAApB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWG,KAAvB;AACD;;AAEDG,EAAAA,cAAc,CAACE,EAAD,EAAK;AACjBZ,IAAAA,QAAQ,CAACmB,QAAT,CAAkBP,EAAlB,EACGQ,IADH,CACSb,KAAD,IAAW,KAAKS,QAAL,CAAc;AAC7BX,MAAAA,MAAM,EAAE,EADqB;AAE7BE,MAAAA;AAF6B,KAAd,CADnB;AAKD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEhB,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKH,KAA/C;;AACA,QAAIE,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGE,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKC,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAnD+B;;AAsDlC,eAAeP,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Loading from '../components/Loading';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'loading',\n      shouldRedirect: false,\n      movie: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchEditMovie = this.fetchEditMovie.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n    const { id } = this.props.match.params;\n    this.setState({\n      movie: updatedMovie,\n      shouldRedirect: true,\n    });\n    this.fetchEditMovie(id);\n    console.log(updatedMovie);\n    console.log(this.state.movie);\n  }\n\n  fetchEditMovie(id) {\n    movieAPI.getMovie(id)\n      .then((movie) => this.setState({\n        status: '',\n        movie,\n      }));\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}