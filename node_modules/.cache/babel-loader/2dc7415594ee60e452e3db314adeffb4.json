{"ast":null,"code":"var _jsxFileName = \"/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: '',\n      shouldRedirect: '',\n      movie: {\n        title: '',\n        subtitle: '',\n        imagePath: '',\n        storyline: '',\n        genre: '',\n        rating: ''\n      }\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchEditMovie = this.fetchEditMovie.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {}\n\n  fetchEditMovie(id) {\n    movieAPI.getMovie(id).then(movie => this.setState({\n      loading: false,\n      movieEdit: movie\n    }));\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {// Redirect\n    }\n\n    if (status === 'loading') {// render Loading\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default EditMovie;","map":{"version":3,"sources":["/home/santiago/Trybe/myprojects/sd-09-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","MovieForm","movieAPI","EditMovie","constructor","props","state","status","shouldRedirect","movie","title","subtitle","imagePath","storyline","genre","rating","handleSubmit","bind","fetchEditMovie","componentDidMount","id","match","params","updatedMovie","getMovie","then","setState","loading","movieEdit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,cAAc,EAAE,EAFL;AAGXC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,EADF;AAELC,QAAAA,QAAQ,EAAE,EAFL;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILC,QAAAA,SAAS,EAAE,EAJN;AAKLC,QAAAA,KAAK,EAAE,EALF;AAMLC,QAAAA,MAAM,EAAE;AANH;AAHI,KAAb;AAYA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKf,KAAL,CAAWgB,KAAX,CAAiBC,MAAhC;AACA,SAAKJ,cAAL,CAAoBE,EAApB;AACD;;AAEDJ,EAAAA,YAAY,CAACO,YAAD,EAAe,CAE1B;;AAEDL,EAAAA,cAAc,CAACE,EAAD,EAAK;AACjBlB,IAAAA,QAAQ,CAACsB,QAAT,CAAkBJ,EAAlB,EACGK,IADH,CACShB,KAAD,IACJ,KAAKiB,QAAL,CAAc;AACZC,MAAAA,OAAO,EAAE,KADG;AAEZC,MAAAA,SAAS,EAAEnB;AAFC,KAAd,CAFJ;AAMD;;AAEDoB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BC,MAAAA;AAA1B,QAAoC,KAAKH,KAA/C;;AACA,QAAIE,cAAJ,EAAoB,CAClB;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B,CACxB;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAGE,KAAnB;AAA2B,MAAA,QAAQ,EAAG,KAAKO,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AApD+B;;AAuDlC,eAAeb,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: '',\n      shouldRedirect: '',\n      movie: {\n        title: '',\n        subtitle: '',\n        imagePath: '',\n        storyline: '',\n        genre: '',\n        rating: '',\n      },\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fetchEditMovie = this.fetchEditMovie.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.fetchEditMovie(id);\n  }\n\n  handleSubmit(updatedMovie) {\n\n  }\n\n  fetchEditMovie(id) {\n    movieAPI.getMovie(id)\n      .then((movie) =>\n        this.setState({\n          loading: false,\n          movieEdit: movie,\n        }));\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      // Redirect\n    }\n\n    if (status === 'loading') {\n      // render Loading\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={ movie } onSubmit={ this.handleSubmit } />\n      </div>\n    );\n  }\n}\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}